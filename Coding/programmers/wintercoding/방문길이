package programmers_wintercoding;

import java.util.LinkedList;
import java.util.Queue;

public class 방문길이 {
	public static void main(String[] args) {
		String dirs = "ULURRDLLU";
		System.out.println(solution(dirs));
	}

	private static int solution(String dirs) {
		int answer = 0;

		int[][] directions = { { -1, 0 }, { 1, 0 }, { 0, 1 }, { 0, -1 } };

		boolean visited[][][][] = new boolean[11][11][11][11];
		int cy = 0;
		int cx = 0;
		int ny = 5;
		int nx = 5;
		for (int i = 0; i < dirs.length(); i++) {
			char d = dirs.charAt(i);
			cy = ny;
			cx = nx;
			int directionNum = 0;
			if (d == 'U') {
				directionNum = 0;
			} else if (d == 'D') {
				directionNum = 1;
			} else if (d == 'R') {
				directionNum = 2;
			} else {
				directionNum = 3;
			}

			ny += directions[directionNum][0];
			nx += directions[directionNum][1];

			if (ny < 0 || ny >= 11 || nx < 0 || nx >= 11) {
				ny -= directions[directionNum][0];
				nx -= directions[directionNum][1];

				continue;
			}

			if (!visited[ny][nx][cy][cx] && !visited[cy][cx][ny][nx]) {
				visited[cy][cx][ny][nx] = true;
				visited[ny][nx][cy][cx] = true;
				answer++;
			}

		}

		return answer;
	}
}
