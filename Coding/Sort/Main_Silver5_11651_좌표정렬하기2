import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Main_Silver5_11651_좌표정렬하기2 {
	static int N;
	static PriorityQueue<Point> pq;
	
	static class Point implements Comparable<Point>{
		int x;
		int y;
		public Point(int x, int y) {
			super();
			this.x = x;
			this.y = y;
		}
		@Override
		public String toString() {
			return "Point [x=" + x + ", y=" + y + "]";
		}
		@Override
		public int compareTo(Point o) {
			// y좌표 검사
			if(this.y > o.y) { // 지금 가지고 있는게 더 크면 지금 들어온것이 앞으로 간다.
				return 1; // 양수면 바꾸기
			} else if(this.y<o.y) {
				return -1; // 음수면 그대로
			} else {
				// y좌표가 같을시 x좌표 검사(y,x좌표 모두 같은 경우는 없다고 가정)
				if(this.x>o.x) { // 지금 가지고 있는게 더 크면 지금 들어온것이 앞으로 간다.
					return 1;
				} else {
					return -1;
				}
			}
		}
	}
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		pq = new PriorityQueue<Point>();
		// 입력
		for(int i=0;i<N;i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			int y = Integer.parseInt(st.nextToken());
			int x = Integer.parseInt(st.nextToken());
			pq.add(new Point(y,x));
		}
		
		int size = pq.size();
		
		// 출력
		while(size-->0) {
			Point points = pq.poll();
			System.out.println(points.x+" "+points.y);
		}
	}
}
