import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main_Silver3_2606_바이러스 {
	static int computer, network, answer;
	static boolean map[][];
	static boolean visited[];

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		computer = Integer.parseInt(br.readLine());
		network = Integer.parseInt(br.readLine());
		map = new boolean[computer][computer]; // 인접행렬 사용
		visited = new boolean[computer];
		StringTokenizer st = null;
		for (int i = 0; i < network; i++) {
			st = new StringTokenizer(br.readLine());
			int x = Integer.parseInt(st.nextToken()) - 1;
			int y = Integer.parseInt(st.nextToken()) - 1;
			map[x][y] = true;
			map[y][x] = true;
		}

		answer = 0;
		dfs(0);
		System.out.println(answer);
	}

	private static void dfs(int cur) {
		visited[cur] = true;
		
		// 인접행렬 검사
		for (int i = 0; i < computer; i++) {
			// 연결되어 있고 방문한 적이 없을 때
			if (map[cur][i] && !visited[i]) {
				dfs(i);
				answer++;
			}
		}

	}

}
